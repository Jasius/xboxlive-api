declare namespace XboxLiveAPI {
    type RequestHTTPMethod = 'GET' | 'PATCH' | 'POST' | 'PUT' | 'DELETE';

    type RequestHeaders = {
        [key: string]: string | number;
    };

    type RequestOptions = {
        method?: RequestHTTPMethod;
        payload?: any;
        qs?: any;
    };

    type ExtraErrorProperties = {
        statusCode?: number;
        reason?: string;
    };

    type MediaThumbnail = {
        uri: string;
        fileSize: 0;
        thumbnailType: 'Small' | 'Large';
    };

    type MediaUri = {
        uri: string;
        fileSize: number;
        uriType: 'Download';
        expiration: string;
    };

    type XBLAuthorization = {
        userHash: string;
        XSTSToken: string;
    };

    type GameclipNode = {
        gameClipId: string;
        state: string;
        datePublished: string;
        dateRecorded: string;
        lastModified: string;
        userCaption: string;
        type: 'UserGenerated' | 'AutoGenerated';
        durationInSeconds: number;
        scid: string;
        titleId: number;
        rating: number;
        ratingCount: number;
        views: number;
        titleData: string;
        systemProperties: string;
        savedByUser: boolean;
        achievementId: string;
        greatestMomentId: string | null;
        thumbnails: MediaThumbnail[];
        gameClipUris: MediaUri[];
        xuid: string;
        clipName: string;
        titleName: string;
        gameClipLocale: string;
        clipContentAttributes: string;
        deviceType: string;
        commentCount: number;
        likeCount: number;
        shareCount: number;
        partialViews: number;
    };

    type PlayerGameclipsResponse = {
        gameClips: GameclipNode[];
        pagingInfo: {
            continuationToken: string | null;
        };
    };

    type ScreenshotNode = {
        screenshotId: string;
        resolutionHeight: number;
        resolutionWidth: number;
        state: string;
        datePublished: string;
        dateTaken: string;
        lastModified: string;
        userCaption: string;
        type: 'UserGenerated' | 'AutoGenerated';
        scid: string;
        titleId: number;
        rating: number;
        ratingCount: number;
        views: number;
        titleData: string;
        systemProperties: string;
        savedByUser: boolean;
        achievementId: string;
        greatestMomentId: string | null;
        thumbnails: MediaThumbnail[];
        screenshotUris: MediaUri[];
        xuid: string;
        screenshotName: string;
        titleName: string;
        screenshotLocale: string;
        screenshotContentAttributes: string;
        deviceType: string;
    };

    type PlayerScreenshotsResponse = {
        screenshots: ScreenshotNode[];
        pagingInfo: {
            continuationToken: string | null;
        };
    };

    type Setting =
        | 'GameDisplayPicRaw'
        | 'Gamerscore'
        | 'Gamertag'
        | 'AccountTier'
        | 'XboxOneRep'
        | 'PreferredColor'
        | 'RealName'
        | 'Bio'
        | 'Location';

    type PlayerSettingsResponse = {
        id: Setting;
        value: string;
    }[];

    function call<T extends any>(
        uri: string,
        authorization: XBLAuthorization,
        options?: RequestOptions
    ): Promise<T>;

    function getPlayerXUID(
        gamertag: string,
        authorization: XBLAuthorization
    ): Promise<string>;

    function getPlayerSettings(
        gamertag: string,
        authorization: XBLAuthorization,
        settings?: Setting[]
    ): Promise<PlayerSettingsResponse>;

    function getPlayerScreenshots(
        gamertag: string,
        authorization: XBLAuthorization,
        maxItems?: number
    ): Promise<PlayerScreenshotsResponse>;

    function getPlayerGameclips(
        gamertag: string,
        authorization: XBLAuthorization,
        maxItems?: number
    ): Promise<PlayerGameclipsResponse>;
}

export = XboxLiveAPI;
